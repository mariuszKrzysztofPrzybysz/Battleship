@model BattleShip.Web.ViewModels.ExtendedEditAccountViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_PlayerLayout.cshtml";

    var imgSrc = "/Content/Images/anonymous.jpg";
    if (Model.Photo != null)
    {
        var base64 = Convert.ToBase64String(Model.Photo);
        imgSrc = $"data:image/jpg;base64,{base64}";
    }
}

<div class="row">
    <div class="col-xs-12 col-md-3"></div>
    <div class="col-xs-12 col-md-6">
        <div class="well well-sm">
            @using (Html.BeginForm("Edit", "Player", FormMethod.Post, new {@class = "form-horizontal", role = "form", enctype = "multipart/form-data"}))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.AccountId)

                <div class="form-horizontal">
                    <fieldset>
                        <div class="well well-sm text-center">
                            <img src="@imgSrc" class="img-rounded" alt="photo" style="margin: 0 auto; width: 50%;">
                        </div>
                        @Html.ValidationSummary(true, "", new {@class = "text-danger"})

                        <div class="form-group">
                            @Html.LabelFor(model => model.FirstName, new {@class = "control-label col-md-3"})
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.FirstName, new {htmlAttributes = new {@class = "form-control"}})
                                @Html.ValidationMessageFor(model => model.FirstName, "", new {@class = "text-danger"})
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.LastName, new {@class = "control-label col-md-3"})
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.LastName, new {htmlAttributes = new {@class = "form-control"}})
                                @Html.ValidationMessageFor(model => model.LastName, "", new {@class = "text-danger"})
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EmailAddress, new {@class = "control-label col-md-3"})
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.EmailAddress, new {htmlAttributes = new {@class = "form-control"}})
                                @Html.ValidationMessageFor(model => model.EmailAddress, "", new {@class = "text-danger"})
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.AccountPhoto, new {@class = "col-md-3 control-label"})
                            <div class="col-md-9">
                                @Html.TextBoxFor(m => m.AccountPhoto, new {type = "file", @class = "btn"})
                                @Html.ValidationMessageFor(model => model.AccountPhoto, "", new {@class = "text-danger"})
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.AllowNewBattle, new {@class = "control-label col-md-3"})
                            <div class="col-md-9">
                                <div class="checkbox">
                                    <label>
                                        @Html.EditorFor(model => model.AllowNewBattle)
                                        @Html.ValidationMessageFor(model => model.AllowNewBattle, "", new {@class = "text-danger"})
                                    </label>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.AllowPrivateChat, new {@class = "control-label col-md-3"})
                            <div class="col-md-9">
                                <div class="checkbox">
                                    <label>
                                        @Html.EditorFor(model => model.AllowPrivateChat)
                                        @Html.ValidationMessageFor(model => model.AllowPrivateChat, "", new {@class = "text-danger"})
                                    </label>
                                </div>
                            </div>
                        </div>

                        @section Scripts {
                            @Scripts.Render("~/bundles/jqueryval")
                        }
                        <div class="form-group">
                            <div class="col-lg-offset-3 col-md-9">
                                <button type="submit" class="btn btn-primary">Submit</button>
                            </div>
                        </div>
                    </fieldset>
                </div>
            }
        </div>
    </div>
    <div class="col-xs-12 col-md-3"></div>
</div>